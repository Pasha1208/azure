{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templateBaseURL": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamesbannan/azure/master/azure-rm/templates",
      "metadata": {
        "description": "Base URL for all nested templates."
      }
    },
    "newStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Name for storage account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "Azure region"
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "storageTemplateFileName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "resourceStorage.json",
      "metadata": {
        "description": "Name of the nested template file"
      }
    },
    "vnetTemplateFileName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "resourceVirtualNetwork.json",
      "metadata": {
        "description": "Name of the nested template file"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM network interface."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address range for the virtual network."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name for the virtual network."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet",
      "metadata": {
        "description": "Subnet name within virtual network."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address range for the subnet within virtual network."
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name for the public IP address resource."
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "IP allocation type for public IP address resource."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for the virtual machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "Azure IaaS instance size for virtual machine."
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "vhdStorageContainerName": "vhds",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "vhdStorageName": "[concat('vhdStorage', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "name": "[parameters('newStorageAccount')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "tags": {
        "displayName": "storage"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseURL'), '/', parameters('storageTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "newStorageAccount": { "value": "[parameters('newStorageAccount')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    },
    {
      "name": "vnet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "tags": {
        "displayName": "vnet"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseURL'), '/', parameters('vnetTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vNetName": { "value": "[parameters('virtualNetworkName')]" },
          "location": { "value": "[resourceGroup().location]" },
          "addressPrefix": { "value": "[parameters('addressPrefix')]" },
          "subnetName": { "value": "[parameters('subnetName')]" },
          "subnetPrefix": { "value": "[parameters('subnetPrefix')]" }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
        "[resourceId('Microsoft.Resources/deployments/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [

      ]
    }
  ]
}
