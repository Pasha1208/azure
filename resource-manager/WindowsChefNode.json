{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "chef-lab-vnet",
      "metadata": {
        "description": "Virtual network name."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "chef",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIPPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Publisher of the operating system image"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Type of operating system image."
      }
    },
    "WindowsServerEdition": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Specific edition of Windows Server."
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Network interface object bound to the virtual machine."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP range of the virtual network."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet",
      "metadata": {
        "description": "Name of the subnet defined by subnetPrefix variable."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "IP range of the subnet defined by subnetName."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account replication type."
      }
    },
    "publicIPAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Name of the public IP address object bound to nicName"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "Type of public IP - static/dynamic."
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "Storage container to house virtual machine disks."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "Instance size of Azure virtual machine."
      }
    },
    "type": {
      "type": "string",
      "defaultValue": "ChefClient",
      "metadata": {
        "description": "Type of Chef VM Extension."
      }
    },
    "typeHandlerVersion": {
      "type": "string",
      "defaultValue": "1210.12",
      "metadata": {
        "description": "Version of Chef VM Extension."
      }
    },
    "chef_server_url": {
      "type": "string",
      "metadata": {
        "description": "URL of the Chef Server."
      }
    },
    "validation_client_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Chef validation client."
      }
    },
    "runlist": {
      "type": "string",
      "metadata": {
        "description": "Initial runlist for the Chef client."
      }
    },
    "validation_key": {
      "type": "securestring",
      "metadata": {
        "description": "Chef organization validation key."
      }
    },
    "client_rb": {
      "type": "string",
      "metadata": {
        "description": "JSON escaped string value of the client.rb file to pass"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "publisher": "Chef.Bootstrap.WindowsAzure"
},
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('publicIPAddressPrefix'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "publicipcopy",
        "count": "[parameters('instanceCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIPPrefix'), '-', copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "niccopy",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressPrefix'), copyIndex())]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('publicIPAddressPrefix'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), '-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmcopy",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('vmNamePrefix'), '-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('WindowsServerEdition')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/',parameters('vmNamePrefix'),copyIndex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicNamePrefix'), copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
             "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNamePrefix'),'-',copyIndex(),'/','chefExtension')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmcopy",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'),'-',copyIndex())]"
      ],
      "properties": {
        "publisher": "[variables('publisher')]",
        "type": "[parameters('type')]",
        "typeHandlerVersion": "[parameters('typeHandlerVersion')]",
        "settings": {
          "bootstrap_options":
          {
            "chef_node_name" : "[concat(parameters('vmNamePrefix'),'-',copyIndex())]",
            "chef_server_url" : "[parameters('chef_server_url')]",
            "validation_client_name" : "[parameters('validation_client_name')]",
          },
          "client_rb": "[parameters('client_rb')]",
          "runlist": "[parameters('runlist')]"
        },
        "protectedSettings": {
          "validation_key": "[parameters('validation_key')]"
        }
      }
    }
  ]
}
